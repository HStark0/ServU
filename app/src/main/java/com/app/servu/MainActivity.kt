package com.app.servu\n\nimport android.content.Intent\nimport android.os.Bundle\nimport android.util.Log\nimport android.widget.LinearLayout\nimport androidx.activity.enableEdgeToEdge\nimport androidx.activity.result.contract.ActivityResultContracts\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.core.view.ViewCompat\nimport androidx.core.view.WindowInsetsCompat\nimport com.google.android.gms.auth.api.signin.GoogleSignIn\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions\nimport com.google.android.gms.common.api.ApiException\nimport com.google.android.material.bottomsheet.BottomSheetBehavior\nimport com.google.android.material.button.MaterialButton\n\nclass MainActivity : AppCompatActivity() {\n\n    private lateinit var googleSignInClient: GoogleSignInClient\n\n    private val googleSignInLauncher = registerForActivityResult(ActivityResultContracts.StartActivityForResult()) { result ->\n        val task = GoogleSignIn.getSignedInAccountFromIntent(result.data)\n        try {\n            val account = task.getResult(ApiException::class.java)!!\n            Log.d(\"MainActivity\", \"Google Sign-In successful for: \${account.email}\")\n            navigateToHome()\n        } catch (e: ApiException) {\n            Log.w(\"MainActivity\", \"Google sign in failed\", e)\n        }\n    }\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        enableEdgeToEdge()\n        setContentView(R.layout.activity_main)\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main)) { v, insets ->\n            val systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)\n            insets\n        }\n\n        // Configure Google Sign-In\n        val gso = GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\n            .requestEmail()\n            .build()\n        googleSignInClient = GoogleSignIn.getClient(this, gso)\n\n        val bottomSheet = findViewById<LinearLayout>(R.id.bottomSheet)\n        val bottomSheetBehavior = BottomSheetBehavior.from(bottomSheet)\n        bottomSheetBehavior.state = BottomSheetBehavior.STATE_HIDDEN\n\n        val loginButton = findViewById<MaterialButton>(R.id.loginButton)\n        loginButton.setOnClickListener {\n            if (bottomSheetBehavior.state == BottomSheetBehavior.STATE_EXPANDED) {\n                bottomSheetBehavior.state = BottomSheetBehavior.STATE_COLLAPSED\n            } else {\n                bottomSheetBehavior.state = BottomSheetBehavior.STATE_EXPANDED\n            }\n        }\n\n        val createAccountButton = findViewById<MaterialButton>(R.id.createAccountButton)\n        createAccountButton.setOnClickListener {\n            val intent = Intent(this, CreateAccountActivity::class.java)\n            startActivity(intent)\n        }\n\n        val bottomSheetLoginButton = findViewById<MaterialButton>(R.id.bottomSheetLoginButton)\n        bottomSheetLoginButton.setOnClickListener {\n            navigateToHome()\n        }\n\n        val googleLoginButton = findViewById<MaterialButton>(R.id.googleLoginButton)\n        googleLoginButton.setOnClickListener {\n            val signInIntent = googleSignInClient.signInIntent\n            googleSignInLauncher.launch(signInIntent)\n        }\n    }\n\n    private fun navigateToHome() {\n        val intent = Intent(this, HomeActivity::class.java)\n        finishAffinity() // Clear the back stack\n        startActivity(intent)\n    }\n}\n